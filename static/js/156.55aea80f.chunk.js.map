{"version":3,"file":"static/js/156.55aea80f.chunk.js","mappings":"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","sources":["api/movies.js","components/ImageWithCheck/ImageWithCheck.styled.js","components/ImageWithCheck/ImageWithCheck.jsx","components/Movies/MoviesList.styled.js","components/Movies/MoviesList.jsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\n\nconst apiKey = \"6fabefdb44ed110e1291f5d3ba9d7ac8\";\n\nexport const getTrendyMovies = async () => {\n    try {\n       \n\n        const response = await axios.get(\n            `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`\n        );\n        return response.data.results;\n    } catch (error) {\n        console.log(error);\n    };\n};\n\nexport const getMoviesByQuery = async (query) => {\n    try {\n        const response = await axios.get(\n            `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}&page=1&include_adult=false`\n        );\n        return response.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n\nexport const getMoviesCast = async (movieId) => {\n\n\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?${apiKey}`);\n        return response.data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getMoviesById = async (movieId) => {\n\n\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?${apiKey}`);\n        return response.data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getMoviesReviews = async (movieId) => {\n\n\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?${apiKey}`);\n        return response.data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst apiMovies = {\n    getTrendyMovies,\n    getMoviesByQuery,\n    getMoviesById,\n    getMoviesCast,\n    getMoviesReviews,\n}\n\nexport default apiMovies;","import styled from \"styled-components\";\n\nexport const Img = styled.img`\n  display: block;\n  max-width: ${props => props.maxWidth ?? \"300px\"};\n  width: 100%;\n`;","import { useState } from \"react\";\nimport { Img } from \"./ImageWithCheck.styled\";\nimport imgNotFound from \"../../images/imgNotFound.png\"\nimport PropTypes from 'prop-types';\n\nconst ImageWithCheck = ({ src, alt, check, maxWidth }) => {\n    const [imgSrc, setImgSrc] = useState(src);\n    const errorHandler = () => {\n        setImgSrc(imgNotFound);\n    }\n\n    return (\n        <>\n            {!check && <Img maxWidth={maxWidth} src={imgNotFound} alt={alt} />}\n            {check && <Img maxWidth={maxWidth} onError={errorHandler} src={imgSrc} alt={alt} />}\n        </>\n    );\n};\n\nImageWithCheck.propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    check: PropTypes.string,\n    maxWidth: PropTypes.string,\n};\n\nexport default ImageWithCheck;","import styled from \"styled-components\";\n\nconst borderRadius = \"10px\";\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 20px;\n  justify-items: center;\n  padding: 0 20px;\n  list-style-type: none;\n  & li {\n    max-width: 300px;\n    width: 100%;\n    border: 1px solid black;\n    border-radius: ${borderRadius};\n    background-color: lightgray;\n    &:hover {\n      border-color: gray;\n      box-shadow: -1px -1px 3px 1px black, 1px 1px 3px 1px black;\n    }\n  }\n  & a {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    color: black;\n    text-decoration: none;\n    & p {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      text-align: center;\n      margin: auto 0;\n      padding: 5px;\n      font-weight: 500;\n    }\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  max-height: 370px;\n  height: 100%;\n  border-top-left-radius: ${borderRadius};\n  border-top-right-radius: ${borderRadius};\n  border-bottom: 1px solid black;\n  overflow: hidden;\n  & img {\n    display: block;\n    height: 100%;\n  }\n`;","import ImageWithCheck from 'components/ImageWithCheck/ImageWithCheck';\nimport React from 'react'\nimport { Link, useLocation } from 'react-router-dom';\nimport { ImgWrapper, List } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n    let location = useLocation();\n\n    return (\n        <List>\n            {movies.map(movie => (\n                <li key={movie.id}>\n                    <Link\n                        to={`/movies/${movie.id}`}\n                        state={{\n                            from: location,\n                        }}\n                    >\n                        <ImgWrapper>\n                            <ImageWithCheck src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} check={movie.poster_path} />\n                        </ImgWrapper>\n                        <p>{movie.title}</p>\n                    </Link>\n                </li>\n            ))}\n        </List>\n    )\n}\n\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default MoviesList","import styled from \"styled-components\";\n\nexport const TrendiesSection = styled.section`\n  & h2 {\n    text-align: center;\n  }\n`;","import MoviesList from 'components/Movies/MoviesList';\nimport React, { useEffect, useState } from 'react';\nimport apiMovies from 'api/movies';\nimport { TrendiesSection } from './HomePage.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst HomePage = () => {\n    const [trendyMovies, setTrendyMovies] = useState([]);\n    const [isLoading, setIsLoading] =useState(false)\n\n    const getMovies = async () => {\n        try {\n            const moviesList = await apiMovies.getTrendyMovies();\n            setIsLoading(true)\n            setTrendyMovies(moviesList);\n        } catch (error) {\n            console.log(error);\n        };\n        setIsLoading(false);\n    };\n\n    useEffect(() => {\n        getMovies();\n    }, []);\n\n    return (\n        <TrendiesSection>\n            {isLoading && <Loader />}\n            <div>\n                <h2>Trending today</h2>\n            </div>\n            <MoviesList movies={trendyMovies} />\n        </TrendiesSection>\n    );\n};\n\nexport default HomePage;"],"names":["apiKey","getTrendyMovies","axios","response","data","results","console","log","getMoviesByQuery","query","getMoviesCast","movieId","getMoviesById","getMoviesReviews","apiMovies","Img","styled","props","maxWidth","src","alt","check","useState","imgSrc","setImgSrc","imgNotFound","onError","borderRadius","List","ImgWrapper","movies","location","useLocation","map","movie","to","id","state","from","ImageWithCheck","poster_path","title","TrendiesSection","trendyMovies","setTrendyMovies","isLoading","setIsLoading","getMovies","moviesList","useEffect","Loader","MoviesList"],"sourceRoot":""}