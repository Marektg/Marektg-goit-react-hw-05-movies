{"version":3,"file":"static/js/363.110b332c.chunk.js","mappings":"2LAGMA,EAAS,mCAEFC,EAAe,mCAAG,6GAIAC,IAAAA,IAAA,kEACwCF,IALxC,cAIjBG,EAJiB,yBAOhBA,EAASC,KAAKC,SAPE,gCASvBC,QAAQC,IAAR,MATuB,iEAAH,qDAafC,EAAgB,mCAAG,WAAOC,GAAP,gGAEDP,IAAAA,IAAA,4DACkCF,EADlC,kBACkDS,EADlD,gCAFC,cAElBN,EAFkB,yBAKjBA,EAASC,KAAKC,SALG,gCAOxBC,QAAQC,IAAR,MAPwB,yDAAH,sDAYhBG,EAAa,mCAAG,WAAOC,GAAP,gGAIET,IAAAA,IAAA,6CAAgDS,EAAhD,4BAA2EX,IAJ7E,cAIfG,EAJe,yBAKdA,EAASC,MALK,gCAOrBE,QAAQC,IAAR,MAPqB,yDAAH,sDAWbK,EAAa,mCAAG,WAAOD,GAAP,kGAIET,IAAAA,IAAA,6CAAgDS,EAAhD,oBAAmEX,IAJrE,cAIfG,EAJe,gBAKAA,EAASC,KALT,cAKfS,EALe,yBAMdA,GANc,kCAQrBP,QAAQC,IAAR,MARqB,0DAAH,sDAYbO,EAAgB,mCAAG,WAAOH,GAAP,gGAIDT,IAAAA,IAAA,6CAAgDS,EAAhD,4BAA2EX,IAJ1E,cAIlBG,EAJkB,yBAKjBA,EAASC,MALQ,gCAOxBE,QAAQC,IAAR,MAPwB,yDAAH,sDAWvBQ,EAAY,CACdd,gBAAAA,EACAO,iBAAAA,EACAI,cAAAA,EACAF,cAAAA,EACAI,iBAAAA,GAGJ,M,4HCtEaE,EAASC,EAAAA,GAAAA,GAAH,ia,SCenB,EAboB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACI,UAACF,EAAD,YACI,qCAAaE,EAAOC,WACpB,uBAAID,EAAOE,YAGtB,ECTYC,EAAUJ,EAAAA,GAAAA,GAAH,sECsBpB,EAnBoB,SAAC,GAAiB,IAAfK,EAAc,EAAdA,QACnB,OACI,gCACyB,KAAb,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAASC,UAAgB,sEAClB,OAAPD,QAAO,IAAPA,OAAA,EAAAA,EAASC,QAAS,IACf,SAACF,EAAD,iBACKC,QADL,IACKA,OADL,EACKA,EAASE,KAAI,SAAAN,GAAM,OAChB,SAAC,EAAD,CAA6BA,OAAQA,GAAnBA,EAAOO,GADT,QAOvC,ECGD,EAbgB,WACZ,IAAQd,GAAYe,EAAAA,EAAAA,MAAZf,QAGFW,EAFYP,EAAAA,GAAAA,iBAA2BJ,GAArCgB,MAEctB,QACtB,OACI,+BAEE,SAAC,EAAD,CAAaiB,QAASA,KAG/B,C","sources":["api/movies.js","components/Reviews/ReviewsItem.styled.js","components/Reviews/ReviewsItem.jsx","components/Reviews/ReviewsList.styled.js","components/Reviews/ReviewsList.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\n\nconst apiKey = \"6fabefdb44ed110e1291f5d3ba9d7ac8\";\n\nexport const getTrendyMovies = async () => {\n    try {\n       \n\n        const response = await axios.get(\n            `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`\n        );\n        return response.data.results;\n    } catch (error) {\n        console.log(error);\n    };\n};\n\nexport const getMoviesByQuery = async (query) => {\n    try {\n        const response = await axios.get(\n            `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}&page=1&include_adult=false`\n        );\n        return response.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n\nexport const getMoviesCast = async (movieId) => {\n\n\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`);\n        return response.data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getMoviesById = async (movieId) => {\n\n\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`);\n        const result = await response.data;\n        return result;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getMoviesReviews = async (movieId) => {\n\n\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`);\n        return response.data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst apiMovies = {\n    getTrendyMovies,\n    getMoviesByQuery,\n    getMoviesById,\n    getMoviesCast,\n    getMoviesReviews,\n}\n\nexport default apiMovies;","import styled from \"styled-components\";\n\nexport const Review = styled.li`\n  background-color: white;\n  padding: 20px;\n  border-radius: 15px;\n  box-shadow: -1px -1px 1px 0px black, 1px 1px 1px 0px black, -1px 1px 1px 0px black, 1px -1px 1px 0px black;\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n  & h3 {\n    margin: 0;\n    padding-bottom: 10px;\n    border-bottom: 1px solid grey;\n  }\n  & p {\n    margin-bottom: 0;\n    text-align: justify;\n  }\n`;","import React from 'react';\nimport { Review } from './ReviewsItem.styled';\nimport PropTypes from 'prop-types';\n\nconst ReviewsItem = ({ review }) => {\n    return (\n        <Review>\n            <h3>Author: {review.author}</h3>\n            <p>{review.content}</p>\n        </Review>\n    );\n};\n\nReviewsItem.propTypes = {\n    review: PropTypes.object.isRequired,\n}\n\nexport default ReviewsItem;","import styled from \"styled-components\";\n\nexport const Reviews = styled.ul`\n  list-style-type: none;\n  padding-left: 0;\n`;","import React from 'react';\nimport ReviewsItem from './ReviewsItem';\nimport { Reviews } from './ReviewsList.styled';\nimport PropTypes from 'prop-types';\n\nconst ReviewsList = ({ reviews }) => {\n    return (\n        <>\n            {reviews?.length === 0 && <p>We don't have any reviews for this movie.</p>}\n            {reviews?.length > 0 && (\n                <Reviews>\n                    {reviews?.map(review => (\n                        <ReviewsItem key={review.id} review={review} />\n                    ))}\n                </Reviews>\n            )}\n        </>\n    );\n};\n\nReviewsList.propTypes = {\n    reviews: PropTypes.arrayOf(PropTypes.object),\n}\n\nexport default ReviewsList;","import apiMovies from 'api/movies';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\n\n// import useFetchMoviesById from '../../hooks/useFetchMoviesById';\n// import Loader from '../../components/Loader/Loader';\nimport ReviewsList from '../../components/Reviews/ReviewsList';\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const { movie } = apiMovies.getMoviesReviews(movieId);\n\n    const reviews = movie.results;\n    return (\n        <>\n           \n          <ReviewsList reviews={reviews} />\n        </>\n    );\n};\n\nexport default Reviews;"],"names":["apiKey","getTrendyMovies","axios","response","data","results","console","log","getMoviesByQuery","query","getMoviesCast","movieId","getMoviesById","result","getMoviesReviews","apiMovies","Review","styled","review","author","content","Reviews","reviews","length","map","id","useParams","movie"],"sourceRoot":""}