{"version":3,"file":"static/js/834.87d73fad.chunk.js","mappings":"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","sources":["api/movies.js","components/ImageWithCheck/ImageWithCheck.styled.js","components/ImageWithCheck/ImageWithCheck.jsx","components/Movies/MovieDetails.styled.js","components/Movies/MovieDetails.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.js","components/Movies/MovieInfo.styled.js","components/Movies/MovieInfo.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\n\nconst apiKey = \"6fabefdb44ed110e1291f5d3ba9d7ac8\";\n\nexport const getTrendyMovies = async () => {\n    try {\n       \n\n        const response = await axios.get(\n            `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`\n        );\n        return response.data.results;\n    } catch (error) {\n        console.log(error);\n    };\n};\n\nexport const getMoviesByQuery = async (query) => {\n    try {\n        const response = await axios.get(\n            `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}&page=1&include_adult=false`\n        );\n        return response.data.results;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n\nexport const getMoviesCast = async (movieId) => {\n\n\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`);\n        return response.data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getMoviesById = async (movieId) => {\n\n\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`);\n        const result = await response.data;\n        return result;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const getMoviesReviews = async (movieId) => {\n\n\n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`);\n        return response.data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst apiMovies = {\n    getTrendyMovies,\n    getMoviesByQuery,\n    getMoviesById,\n    getMoviesCast,\n    getMoviesReviews,\n}\n\nexport default apiMovies;","import styled from \"styled-components\";\n\nexport const Img = styled.img`\n  display: block;\n  max-width: ${props => props.maxWidth ?? \"300px\"};\n  width: 100%;\n`;","import { useState } from \"react\";\nimport { Img } from \"./ImageWithCheck.styled\";\nimport imgNotFound from \"../../images/imgNotFound.png\"\nimport PropTypes from 'prop-types';\n\nconst ImageWithCheck = ({ src, alt, check, maxWidth }) => {\n    const [imgSrc, setImgSrc] = useState(src);\n    const errorHandler = () => {\n        setImgSrc(imgNotFound);\n    }\n\n    return (\n        <>\n            {!check && <Img maxWidth={maxWidth} src={imgNotFound} alt={alt} />}\n            {check && <Img maxWidth={maxWidth} onError={errorHandler} src={imgSrc} alt={alt} />}\n        </>\n    );\n};\n\nImageWithCheck.propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    check: PropTypes.string,\n    maxWidth: PropTypes.string,\n};\n\nexport default ImageWithCheck;","import styled from \"styled-components\";\n\nexport const Details = styled.article`\n  @media (min-width: 660px) {\n    display: grid;\n    grid-template-columns: 300px 1fr;\n    gap: 20px;\n  }\n  @media (min-width: 1024px) {\n    gap: 50px;\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  max-width: 300px;\n  width: 100%;\n  margin: 0 auto;\n  @media (min-width: 660px) {\n    margin: 0;\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  text-align: justify;\n  @media (min-width: 660px) {\n    & h2 {\n      margin-top: 0;\n    }\n  }\n  @media (min-width: 1024px) {\n    padding-right: 50px;\n  }\n`;","import React from 'react'\nimport ImageWithCheck from '../ImageWithCheck/ImageWithCheck'\nimport { Details, MovieInfo, ImgWrapper } from './MovieDetails.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieDetails = ({ movie }) => {\n    const { poster_path, release_date, title, vote_average, overview, genres } =\n        movie;\n\n    const releaseYear = new Date(release_date).getFullYear();\n    const userScore = `${(vote_average * 10).toFixed(0)}%`;\n\n    return (\n        <Details>\n            <ImgWrapper>\n                <ImageWithCheck\n                    src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                    alt={`${title} cover`}\n                    check={poster_path}\n                    maxWidth=\"500px\"\n                />\n            </ImgWrapper>\n            <MovieInfo>\n                <h2>{`${title} (${releaseYear})`}</h2>\n                <p>{`User score: ${userScore}`}</p>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <p>{genres?.map(g => g.name).join(', ')}</p>\n            </MovieInfo>\n        </Details>\n    )\n}\n\nMovieDetails.propTypes = {\n    movie: PropTypes.object,\n};\n\nexport default MovieDetails","import styled from \"styled-components\";\n\nexport const MovieDetailsSection = styled.section`\n  padding: 10px 20px;\n  & button {\n    margin-bottom: 10px;\n    padding: 8px 16px;\n    border: 1px solid grey;\n    border-radius: 5px;\n    font-size: 14px;\n    color: white;\n    background-color: black;\n    cursor: pointer;\n    &:hover,\n    &:focus {\n      background-color: #B30303;\n      box-shadow: -1px -1px 3px 1px black, 1px 1px 3px 1px black;\n      transition: background-color 400ms;\n    }\n  }\n`;","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const InfoList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  display: flex;\n  & li {\n    &:not(:last-child) {\n      margin-right: 15px;\n    }\n  }\n`;\n\nexport const InfoLink = styled(NavLink)`\n  display: block;\n  padding: 8px 16px;\n  border: 1px solid grey;\n  border-radius: 5px;\n  font-size: 14px;\n  text-decoration: none;\n  color: white;\n  background-color: black;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    font-weight: 600;\n    background-color: #B30303;\n    box-shadow: -1px -1px 3px 1px black, 1px 1px 3px 1px black;\n    transition: background-color 500ms;\n  }\n  &.active {\n    font-weight: 600;\n    background-color: #B30303;\n    box-shadow: -1px -1px 3px 1px black, 1px 1px 3px 1px black;\n  }\n`;","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { InfoLink, InfoList } from './MovieInfo.styled';\n\nconst MovieInfo = () => {\n    const location = useLocation();\n\n    return (\n        <div>\n            <h3>Aditional information</h3>\n            <InfoList>\n                <li>\n                    <InfoLink to=\"cast\" state={location.state}>\n                        Cast\n                    </InfoLink>\n                </li>\n                <li>\n                    <InfoLink to=\"reviews\" state={location.state}>\n                        Reviews\n                    </InfoLink>\n                </li>\n            </InfoList>\n        </div>\n    );\n};\n\nexport default MovieInfo;","import React from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\n// import useFetchMoviesById from '../../hooks/useFetchMoviesById';\nimport apiMovies from 'api/movies';\n// import Loader from '../../components/Loader/Loader';\nimport MovieDetails from '../../components/Movies/MovieDetails';\nimport { MovieDetailsSection } from './MovieDetailsPage.styled';\nimport MovieInfo from 'components/Movies/MovieInfo';\n\nconst MovieDetailsPage = () => {\n    const { movieId } = useParams();\n    const location = useLocation();\n    const navigate = useNavigate();\n    const movie = apiMovies.getMoviesById(movieId);\n    console.log(movie)\n\n    const backLink =\n        `${location.state?.from?.pathname}${location.state?.from?.search}` ??\n        '/movies';\n\n    const goBackHandler = e => {\n        navigate(backLink, { replace: true });\n    };\n\n    return (\n        <MovieDetailsSection>\n            <button type=\"button\" onClick={goBackHandler}>\n                &larr; Go back\n            </button>\n            \n                <>\n                    <MovieDetails movie={movie} />\n                    <MovieInfo />\n                    <Outlet />\n                </>\n            \n        </MovieDetailsSection>\n    );\n};\n\nexport default MovieDetailsPage;"],"names":["apiKey","getTrendyMovies","axios","response","data","results","console","log","getMoviesByQuery","query","getMoviesCast","movieId","getMoviesById","result","getMoviesReviews","apiMovies","Img","styled","props","maxWidth","src","alt","check","useState","imgSrc","setImgSrc","imgNotFound","onError","Details","ImgWrapper","MovieInfo","movie","poster_path","release_date","title","vote_average","overview","genres","releaseYear","Date","getFullYear","userScore","toFixed","ImageWithCheck","map","g","name","join","MovieDetailsSection","InfoList","InfoLink","NavLink","location","useLocation","to","state","useParams","navigate","useNavigate","backLink","from","pathname","search","type","onClick","e","replace"],"sourceRoot":""}